<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
This Plugin installs and controls SABnzbd+ for UnRaid.
All dependencies are installed as needed and everything is controlable from the webgui
Also this plugin enables easy updates for SABnzbd, since the app doesn't have it's own update routine

Credits:
Benni-Chan: Originally creating the plug-in. Much of his code is still in

WW: Install & Data Directory size, some config page formatting.

I have...
 * probably missed some credits here, not intentional but I do not have a perfect memory!
 * made changes and added features myself. I have removed the changelog from the plug-in itself.
 * done this because since I am hosting the plug-ins on github, there is an accurate changelog with the commits.

-->

<FILE Name="/boot/packages/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/d/python-2.6.6-i486-1.txz</URL>
<MD5>b8de0c9f8b89aa7b3c89823d20076867</MD5>
</FILE>
<FILE Name="/boot/packages/python-cheetah-2.4.4-i486-1alien.tgz" Run="upgradepkg --install-new">
<URL>http://connie.slackware.com/~alien/slackbuilds/python-cheetah/pkg/13.37/python-cheetah-2.4.4-i486-1alien.tgz</URL>
<MD5>9535ac8193f269729467357b068117aa</MD5>
</FILE>
<FILE Name="/boot/packages/python-yenc-0.3-i486-1alien.tgz" Run="upgradepkg --install-new">
<URL>http://connie.slackware.com/~alien/slackbuilds/python-yenc/pkg/13.37/python-yenc-0.3-i486-1alien.tgz</URL>
<MD5>904c93692352cc2ddb8a3f769408bfad</MD5>
</FILE>
<FILE Name="/boot/packages/sqlite-3.7.5-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/ap/sqlite-3.7.5-i486-1.txz</URL>
<MD5>6786d3764cb294ecb71cdd24e6d171d1</MD5>
</FILE>
<FILE Name="/boot/packages/unrar-4.0.7-i486-2alien.tgz" Run="upgradepkg --install-new">
<URL>http://connie.slackware.com/~alien/slackbuilds/unrar/pkg/13.37/unrar-4.0.7-i486-2alien.tgz</URL>
<MD5>33c9f9ad19261d5ebdd1ec8d357e8037</MD5>
</FILE>
<FILE Name="/boot/packages/infozip-6.0-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/a/infozip-6.0-i486-1.txz</URL>
<MD5>4d59c199192a5fc4dc55089edcb66723</MD5>
</FILE>
<FILE Name="/boot/packages/openssl-solibs-0.9.8x-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://www.slackware.org.uk/slackware/slackware-current/slackware/a/openssl-solibs-0.9.8x-i486-1.txz</URL>
<MD5>545a3d0cc1f77f8d335bbbd4bacdbb12</MD5>
</FILE>
<FILE Name="/boot/packages/pyopenssl-0.11-i486-1alien.tgz" Run="upgradepkg --install-new">
<URL>http://connie.slackware.com/~alien/slackbuilds/pyopenssl/pkg/13.37/pyopenssl-0.11-i486-1alien.tgz</URL>
<MD5>e02b8f7ff139e51c101721440068c455</MD5>
</FILE>
<FILE Name="/boot/packages/par2cmdline_tbb-0.4-i486-1kh.tgz" Run="upgradepkg --install-new">
<URL>http://unraid-greenleaf-repository.googlecode.com/files/par2cmdline_tbb-0.4-i486-1kh.tgz</URL>
<MD5>c5a5550888ae009531f133a33ed85be7</MD5>
</FILE>
<FILE Name="/boot/config/plugins/sabnzbd/sabnzbd.png">
<URL>--no-check-certificate https://github.com/downloads/W-W/unRAID/sabnzbd.png</URL>
</FILE>
<FILE Name="/boot/packages/curl-7.21.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.osuosl.org/slackware-13.37/slackware/n/curl-7.21.4-i486-1.txz</URL>
<MD5>e32449e0588ef54df8524827028972e8</MD5>
</FILE>

<!-- clean up previous install -->
<FILE Name="/tmp/sabnzbd-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -f /etc/rc.d/rc.sabnzbd
rm -f -R /usr/local/emhttp/plugins/sabnzbd
rm /tmp/sabnzbd-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/sabnzbd/sabnzbd.cfg">
<INLINE>
<![CDATA[
# sabnzbd configuration
SERVICE="disable"
INSTALLDIR="/usr/local/sabnzbd"
DATADIR="/usr/local/sabnzbd"
PORT="8081"
RUNAS="nobody"
INSTALLBETA="no"
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.sabnzbd" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable sabnzbd.

sabnzbd_start()
{
	# no-op if not enabled
	if [ $SERVICE != "enable" ]; then
		return
	fi
  
	# no-op if already running
	if [ -r /var/run/sabnzbd/sabnzbd-$PORT.pid ]; then
		return
	fi

	# if directory doesn't exist or sabnzbd is not found, install it
	if [[ "$INSTALLDIR" != "" &&  ! -e "$INSTALLDIR/SABnzbd.py" ]]; then
		sabnzbd_install
	fi
  
	CMDLINE="sudo -u $RUNAS python $INSTALLDIR/SABnzbd.py -d -s 0.0.0.0:$PORT --config-file $DATADIR --pid /var/run/sabnzbd > /master/null 2>&1"
	echo -n "Starting sabnzbd:  $CMDLINE"
	$CMDLINE
	echo
  
	while [ ! -e /var/run/sabnzbd/sabnzbd-$PORT.pid  ]; do
		sleep 1
	done
}

sabnzbd_stop()
{
	# no-op if not running
	if [ ! -r /var/run/sabnzbd/sabnzbd-$PORT.pid ]; then
		return
	fi
	echo -n "Stopping sabnzbd..."
	sleep 0.5
	echo

	if [ -d $DATADIR ] && [ -f $DATADIR/sabnzbd.ini ]; then
		APIKEY=`grep -w api_key $DATADIR/sabnzbd.ini | cut -d " " -f3`
		IP=$(ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | grep -v '^5' | awk '{ print $1}')
		RES=$(wget -qO - "http://$IP:$PORT/sabnzbd/api?mode=shutdown&apikey=$APIKEY")
		if [[ $RES != "ok" ]]; then
			echo "wrong API KEY found, using kill"
			kill $(cat /var/run/sabnzbd/sabnzbd-$PORT.pid)
		fi
	else
		kill $(cat /var/run/sabnzbd/sabnzbd-$PORT.pid)
	fi
	echo

	while [ -e /var/run/sabnzbd/sabnzbd-$PORT.pid  ]; do
		sleep 1
	done
}

sabnzbd_restart()
{
	sabnzbd_stop
	sleep 1
	sabnzbd_start
}

write_config()
{
	echo "# sabnzbd configuration" > /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "DATADIR=\"$DATADIR\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "PORT=\"$PORT\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
	echo "INSTALLBETA=\"$INSTALLBETA\"" >> /boot/config/plugins/sabnzbd/sabnzbd.cfg
}

sabnzbd_enable()
{
	# if not already enabled, enable it
	if [ "$SERVICE" != "enable" ]; then
		SERVICE=enable
		PORT="$2"
		INSTALLDIR="$3"
		DATADIR="$4"
		INSTALLBETA="$5"
	
		if [ $DATADIR == "" ]; then
			$DATADIR=$INSTALLDIR
		fi
	
		if [ $RUNAS != $1 ]; then
			chown -R $1:users "$INSTALLDIR"
		fi
	
		RUNAS="$1"
	
		# create sabnzbd user if necessary
		if [[ $RUNAS != "nobody" && $RUNAS != "root" ]]; then
			if ( ! grep -q ^$RUNAS /etc/passwd ); then
				useradd -r -g users -d / -s /bin/false $RUNAS &> /master/null
				cp /etc/passwd /etc/shadow /boot/config
			fi
		fi
		write_config
	fi

	# enabling also starts it
	sabnzbd_start
}

sabnzbd_disable()
{
	sabnzbd_stop
	SERVICE=disable
	write_config
}

sabnzbd_install()
{	
	if [ ! -e "$INSTALLDIR" ]; then 
		mkdir -p "$INSTALLDIR"
	fi
	if [ ! -e "$DATADIR" ]; then 
		mkdir -p "$DATADIR"
	fi
	
		stable=0.7.0
		echo "installing latest Version ($stable)"
	
		cd /tmp
		wget http://downloads.sourceforge.net/project/sabnzbdplus/sabnzbdplus/0.7.0/SABnzbd-0.7.0-src.tar.gz
		tar -xf /tmp/SABnzbd-${stable}-src.tar.gz
		cp -R /tmp/SABnzbd-${stable}/* $INSTALLDIR
		chown -R $RUNAS:users "$INSTALLDIR"		
		rm -R /tmp/SABnzbd-${stable} /tmp/SABnzbd-${stable}-src.tar.gz
	
}

sabnzbd_check_update()
{
	if [[ $INSTALLBETA = "no" || $INSTALLBETA = "" ]]; then
		sabnzbd_version
		stable=($(wget -q -O - http://sabnzbdplus.sourceforge.net/version/latest | awk '/0/{gsub(/\015/,"");print}'))
	
		if [[ $currentversion != "" && $currentversion != $stable ]]; then
			echo "Stable update available to version: $stable"
		fi
	elif [ $INSTALLBETA = "yes" ]; then
		sabnzbd_version
		beta=($(wget -q -O - http://sabnzbdplus.sourceforge.net/version/latest | awk '/RC/{gsub(/\015/,"");print}'))
			if [ $beta = "" ]; then
				stable=($(wget -q -O - http://sabnzbdplus.sourceforge.net/version/latest | awk '/0/{gsub(/\015/,"");print}'))
				echo "Currently no beta available, latest stable is $stable"
			else
				if [[ $currentversion != "" && $currentversion != $beta ]]; then
				echo "Beta update available to version: $beta" 
				fi
			fi
	fi 
}

sabnzbd_update()
{
	sabnzbd_stop
	sleep 1
	sabnzbd_install
	sleep 1
	sabnzbd_start
}	

sabnzbd_version()
{
	if [ -f $INSTALLDIR/SABnzbd.py ]; then
		currentversion=$(python $INSTALLDIR/SABnzbd.py --version | sed '/SABnzbd.py*/!d' | cut -c12-21)
	else 
		echo SABnzbd does not exist!
		exit 0
	fi
}

sabnzbd_datacheck() 
{
	array=( ramfs proc tempfs sysfs )
	fs=$( stat -f -c '%T' $DATADIR )
	for i in "${array[@]}"
	do
		if [ $i = $fs ]; then
		    echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b>Your Data Directory is not persistent and WILL NOT survive a reboot. Please locate Data Directory on disk for persistency</p>"
			break
		elif [ $i = msdos ]; then
			echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b>Your Data Directory is located on your flash drive. This will decrease your flash drives life span!</p>"
			break
		else
			echo "<p style="color:green\;margin-left:10px\;">Your data will persist after a reboot</p>"
			break
		fi
	done
}

sabnzbd_updateplg()
{
	cd /boot/config/plugins
	if [ -f sabnzbd_unplugged.plg ]; then
	mv sabnzbd_unplugged.plg sabnzbd_unplugged.plg.old
	echo "Updating plugin"
	wget -q --no-check-certificate https://github.com/Influencer/UNplugged/raw/master/sabnzbd_unplugged.plg
	/usr/local/sbin/installplg /boot/config/plugins/sabnzbd_unplugged.plg
	else
	echo "Updating plugin"
	wget -q --no-check-certificate https://github.com/Influencer/UNplugged/raw/master/sabnzbd_unplugged.plg
	/usr/local/sbin/installplg /boot/config/plugins/sabnzbd_unplugged.plg
	fi
}
sabnzbd_downgradeplg()
{
	cd /boot/config/plugins
	if [ -f sabnzbd_unplugged.plg.old ]; then
	rm -f /sabnzbd_unplugged.plg
	mv sabnzbd_unplugged.plg.old sabnzbd_unplugged.plg
	echo "downgrading plugin"
	/usr/local/sbin/installplg /boot/config/plugins/sabnzbd_unplugged.plg
	fi
}
# read our configuration
source /boot/config/plugins/sabnzbd/sabnzbd.cfg

case "$1" in
	'start')
		sabnzbd_start
	;;
	'stop')
		sabnzbd_stop
	;;
	'restart')
		sabnzbd_restart
	;;
	'enable')
		sabnzbd_enable $2 $3 $4 $5 $6
	;;
	'disable')
		sabnzbd_disable
	;;
	'install')
		sabnzbd_install
	;;	
	'update')
		sabnzbd_update
	;;	
	'check_update')
		sabnzbd_check_update
	;;
	'version')
		sabnzbd_version
		echo $currentversion
	;;
	'datacheck')
		sabnzbd_datacheck
	;;
	'updateplg')
		sabnzbd_updateplg
	;;
	'downgradeplg')
		sabnzbd_downgradeplg
	;;
	*)
		echo "usage $0 start|stop|restart|enable|disable|install|update|check_update|version|datacheck|updateplg|downgradeplg"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/sabnzbd/sabnzbd.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="sabnzbd.png"
Author="Benjamin Waller; Influencer; Wojciech Walaszek"
Type="php"
Title="SABnzbd"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/sabnzbd/sabnzbd.png">
<LOCAL>/boot/config/plugins/sabnzbd/sabnzbd.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/sabnzbd/sabnzbd.php">
<INLINE>
<![CDATA[
<?PHP
$sabnzbd_cfg = parse_ini_file( "/boot/config/plugins/sabnzbd/sabnzbd.cfg");
$sabnzbd_installed = file_exists( $sabnzbd_cfg["INSTALLDIR"] . "/SABnzbd.py" ) ? "yes" : "no";
$sabnzbd_rollback = file_exists( "boot/config/plugins/sabnzbd_unplugged.plg.old" ) ? "yes" : "no";
if ($sabnzbd_installed=="yes")
{
	if (file_exists($sabnzbd_configfile))
		$sab_port = trim(shell_exec( "cat \"$sabnzbd_configfile\" | grep '^port' | awk 'NR==1' | cut -d' ' -f3" ));
	$sabnzbd_running = file_exists( "/var/run/sabnzbd/sabnzbd-".$sab_port.".pid") ? "yes" : "no";
	if ($sabnzbd_cfg[PLG_STORAGESIZE]=="yes")
		$sabnzbd_datasize = shell_exec ( "/etc/rc.d/rc.sabnzbd storagesize $sabnzbd_cfg[INSTALLDIR] $sabnzbd_cfg[DATADIR]" );
	if ($sabnzbd_cfg[PLG_DATACHECK]=="yes")
		$sabnzbd_datacheck = shell_exec ( "/etc/rc.d/rc.sabnzbd datacheck" );
	$sabnzbd_curversion = shell_exec ( "python $sabnzbd_cfg[INSTALLDIR]/SABnzbd.py --version | sed '/SABnzbd.py*/!d' | cut -c12-21" );
	$sabnzbd_newversion = shell_exec ( "wget -q -O - http://sabnzbdplus.sourceforge.net/version/latest | awk NR==1" );
}
else
	if (file_exists("/boot/config/plugins/sabnzbd/sabnzbd.ini"))
		$sab_port = trim(shell_exec( "cat /boot/config/plugins/sabnzbd/sabnzbd.ini | grep '^port' | awk 'NR==1' | cut -d' ' -f3" ));
?>
<div style="width: 49%; float:left">
	<div id="title">
		<span class="left"><img src='/plugins/sabnzbd/masterice_status.png' class='icon'>Status:
			<?if ($sabnzbd_installed=="yes"):?>	
				<?if ($sabnzbd_running=="yes"):?>
					<a href="http://<?=$var['NAME'];?>:<?=$sabnzbd_cfg['PORT'];?>" target="_blank"><span class="green"><b>RUNNING</b></span></a><span style="font-size:12px;"> with version: <b><?=$sabnzbd_curversion?></b></span>
				<?else:?>
					<span class="red"><b>STOPPED</b></span>
				<?endif;?>
			<?else:?>
				<span class="red"><b>NOT INSTALLED</b></span>
			<?endif;?>	
		</span>
	</div>	
	<?if ($sabnzbd_installed=="yes"):?>
		<div style="position:relative;float:left;width:50%;text-align:right; margin-bottom:24px">
			<form name="sabnzbd_start_stop" method="POST" action="/update.htm" target="progressFrame">
				<?if ($sabnzbd_running=="yes"):?>
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd stop">
					<input type="submit" name="runCmd" value="Stop">
				<?else:?>
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd start">
					<input type="submit" name="runCmd" value="Start">
				<?endif;?>
			</form>
		</div>
		<div style="position:relative;float:left;width:50%;margin-bottom:24px">
			<form name="sabnzbd_restart" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd restart">
					<input type="submit" name="runCmd" value="Restart">
			</form>
		</div>
	<?else:?>
		<div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
			<form name="sabnzbd_install" method="POST" action="/update.htm" target="progressFrame">
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd install">			
				<input type="submit" name="runCmd" value="Install">
			</form>
		</div>
	<?endif;?>
	<? if ($sabnzbd_rollback=="yes"): ?>
	<div style="position:relative;float:left;width:50%;text-align:right;margin-bottom:24px">
			<form name="sabnzbd_update1" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd updateplg">
					<input type="submit" name="runCmd" value="Update PLG">
			</form>
	</div>
	<div style="position:relative;float:left;width:50%;text-align:left;margin-bottom:24px">
		<form name="sabnzbd_downgrade" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd downgradeplg">
					<input type="submit" name="runCmd" value="Downgrade PLG">
			</form>
	</div>
	<?else:?>
	<div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
			<form name="sabnzbd_update" method="POST" action="/update.htm" target="progressFrame">
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd updateplg">			
				<input type="submit" name="runCmd" value="Update PLG">
			</form>
		</div>
	<?endif;?><br/>
	<? if ($sabnzbd_installed=="yes"): ?>	
		<center><hr size="3" width="50%" color="grey"></center>
		<p style="margin-left:10px;">Headphones is installed with version: <?=$sabnzbd_curversion;?></p>
		<? if ($sabnzbd_cfg[PLG_STORAGESIZE]=="yes"): ?>
			<?=$sabnzbd_datasize?>
		<? endif; ?>
		<? if ($sabnzbd_cfg[PLG_DATACHECK]=="yes"): ?>
			<?=$sabnzbd_datacheck?>
		<? endif; ?>
		<p style="margin-left:10px;"><b>Plug-in Version: <?=$sabnzbd_plgver;?></b></p>
		<? if (strcmp($sabnzbd_curversion, $sabnzbd_newversion)!=0 && $sabnzbd_curversion!="couldn't determine the Headphones version"): ?>
			<center>
				<form name="sabnzbd_settings" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd update">
					<p style="color:blue;margin-left:10px;">Update available to version: <b><?=$sabnzbd_newversion;?></b></p>
					<hr size="3" width="50%" color="grey" style="margin-bottom:15px">
					<input type="submit" name="runCmd" value="Update">
				</form>	 
			</center>
		<? endif; ?>
	<? endif; ?>
</div>
<div style="width: 49%; float:right">
	<div id="title">
		<span class="left"><img src='/plugins/sabnzbd/new_config.png' class='icon'>Configuration:</span>
	</div>
	<form name="sabnzbd_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd">
		<table class="settings">
			<tr>
				<td>Enable HeadPhones:</td>
				<td>
					<select name="arg1" size="1" onChange="checkRUNNING(this.form);">
						<?=mk_option($sabnzbd_cfg['SERVICE'], "disable", "No");?>
						<?=mk_option($sabnzbd_cfg['SERVICE'], "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install directory:</td>
				<td><input type="text" name="arg4" maxlength="60" value="<?=$sabnzbd_cfg['INSTALLDIR'];?>"></td>
			</tr>
			<tr>
				<td>Data directory:</td>
				<td><input type="checkbox" name="use_data" <?=($sabnzbd_cfg['DATADIR']!=$sabnzbd_cfg['INSTALLDIR'])?"checked=\"checked\"":"";?> onChange="checkDATADIR(this.form);"> <input type="text" name="arg5" style="width:86%" maxlength="60" value="<?=$sabnzbd_cfg['DATADIR'];?>"></td>
			</tr>
			<tr>
				<td>Port:</td>
				<td><input type="text" name="arg3" maxlength="40" value="<?=$sabnzbd_cfg['PORT'];?>"></td>
			</tr>
			<tr>
				<td>Run as user:</td>
				<td>
					<select name="runas" size="1" onChange="checkUSER(this.form);">
						<?=mk_option($sabnzbd_cfg['RUNAS'], "nobody", "nobody");?>
						<?=mk_option($sabnzbd_cfg['RUNAS'], "root", "root");?>
						<option value='other'<?=($sabnzbd_cfg['RUNAS'] != "root" && $sabnzbd_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
					</select>
					<input type="hidden" name="arg2" style="width:66%" maxlength="40" value="<?=$sabnzbd_cfg['RUNAS'];?>">
				</td>
			</tr>
			<tr><td>---</td></tr>
			<tr>
				<td>Show storage memory usage:</td>
				<td>
					<select name="storagesize" size="1" onChange="checkSTORAGE(this.form);">
						<?=mk_option($sabnzbd_cfg['PLG_STORAGESIZE'], "yes", "Yes");?>
						<?=mk_option($sabnzbd_cfg['PLG_STORAGESIZE'], "no", "No");?>
					</select>
					<input type="hidden" name="arg6" value="<?=$sabnzbd_cfg['PLG_STORAGESIZE'];?>">
				</td>
			</tr>
			<tr>
				<td>Show data persistency information:</td>
				<td>
					<select name="datacheck" size="1" onChange="checkDATA(this.form);">
						<?=mk_option($sabnzbd_cfg['PLG_DATACHECK'], "yes", "Yes");?>
						<?=mk_option($sabnzbd_cfg['PLG_DATACHECK'], "no", "No");?>
					</select>
					<input type="hidden" name="arg7" value="<?=$sabnzbd_cfg['PLG_DATACHECK'];?>">
				</td>
			</tr>
		</table>
		<div align="center">
			<hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px" >
			<input type="submit" name="runCmd" value="Apply" style="margin-bottom:8px">
			<button type="button" style="margin-bottom:8px" onClick="done();">Done</button>
		</div>
	</form>
	<br />
</div>
<script type="text/javascript">
function checkINSTALLDIR(form)
{
   if ("<?=$sabnzbd_running;?>" == "yes")
   {
		form.arg2.readOnly = true;
		form.arg3.readOnly = true;
		form.arg4.readOnly = true;
		form.arg5.readOnly = true;
		form.runas.disabled = true;
		form.use_data.disabled = true;
		form.storagesize.disabled = true;
		form.datacheck.disabled = true;
   }
   else
   {
		form.arg2.readOnly = (form.arg1.value == "enable");
		form.arg3.readOnly = (form.arg1.value == "enable");
		form.arg4.readOnly = (form.arg1.value == "enable");
		form.arg5.readOnly = (form.arg1.value == "enable");
		form.runas.disabled = (form.arg1.value == "enable");
		form.use_data.disabled = (form.arg1.value == "enable");
		form.storagesize.disabled = (form.arg1.value == "enable");
		form.datacheck.disabled = (form.arg1.value == "enable");		
	}
}

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 )
	{
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	}
	else
	{
		form.arg2.value = "<?=$sabnzbd_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

function checkDATADIR(form)
{
	if (form.use_data.checked == false )
	{
		form.arg5.value = form.arg4.value;;
		form.arg5.type = "hidden";
	}
	else
	{
		form.arg5.value = "<?=$sabnzbd_cfg['DATADIR'];?>";
		form.arg5.type = "text";
	}
}

function checkSTORAGE(form)
{
	form.arg6.value = form.storagesize.options[form.storagesize.selectedIndex].value;
}

function checkDATA(form)
{
	form.arg7.value = form.datacheck.options[form.datacheck.selectedIndex].value;
}
	<form name="sabnzbd_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd">
		<table class="settings">
			<tr>
				<td>Enable SABnzbd:</td>
				<td>
					<select name="arg1" size="1" onChange="checkINSTALLDIR(this.form);">
						<?=mk_option($sabnzbd_cfg['SERVICE'], "disable", "No");?>
						<?=mk_option($sabnzbd_cfg['SERVICE'], "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install Beta/RC versions:</td>
				<td>
					<select name="arg6" size="1">
						<?=mk_option($sabnzbd_cfg['INSTALLBETA'], "no", "No");?>
						<?=mk_option($sabnzbd_cfg['INSTALLBETA'], "yes", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install directory:</td>
				<td><input type="text" name="arg4" maxlength="60" value="<?=$sabnzbd_cfg['INSTALLDIR'];?>"></td>
			</tr>
			<tr>
				<td>Data directory:</td>
				<td><input type="checkbox" name="use_data" <?=($sabnzbd_cfg['DATADIR']!=$sabnzbd_cfg['INSTALLDIR'])?"checked=\"checked\"":"";?>  onChange="checkDATADIR(this.form);"> <input type="text" name="arg5" maxlength="60" value="<?=$sabnzbd_cfg['DATADIR'];?>"></td>
			</tr>
			<tr>
				<td>Port:</td>
				<td><input type="text" name="arg3" maxlength="40" value="<?=$sabnzbd_cfg['PORT'];?>"></td>
			</tr>
			<tr>
				<td>Run as user:</td>
				<td>
					<select name="runas" size="1"  onChange="checkUSER(this.form);">
						<?=mk_option($sabnzbd_cfg['RUNAS'], "nobody", "nobody");?>
						<?=mk_option($sabnzbd_cfg['RUNAS'], "root", "root");?>
						<option value='other'<?=($sabnzbd_cfg['RUNAS'] != "root" && $sabnzbd_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
					</select>
					<input type="text" name="arg2" maxlength="40" value="<?=$sabnzbd_cfg['RUNAS'];?>">
				</td>
			</tr>
			<tr>
				<td></td>
				<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button></td>
			</tr>
		</table>
	</form>
	<hr>
<div id="title"><span class="left">Status:
<?if ($sabnzbd_running=="yes"):?>
  <a href="http://<?=$var['NAME'];?>:<?=$sabnzbd_cfg['PORT'];?>" target="_blank"><span class="green"><b>RUNNING</b></span></a><span> with version: <b><?=$sabnzbd_curversion?></b></span>
<?else:?>
  <span class="red"><b>STOPPED</b></span>
<?endif;?>
</span></div>
<? if ($sabnzbd_installed=="yes"): ?>
	<? if ($sabnzbd_installdirsize!=0 && $sabnzbd_installdirsize!=""): ?>
		<? if ($sabnzbd_cfg["INSTALLDIR"] == $sabnzbd_cfg["DATADIR"]): ?>
			<p style="margin-left:10px;">SABnzbd storage memory usage: install + data directory: <b><?=$sabnzbd_installdirsize?></b></p>
		<? else: ?>
			<p style="margin-left:10px;">SABnzbd storage memory usage: install directory: <b><?=$sabnzbd_installdirsize?></b>, data directory: <b><?=$sabnzbd_datadirsize?></b></p>
		<? endif; ?>
	<? endif; ?>
	<?=$sabnzbd_datacheck?>
	<? if ($sabnzbd_update != ""): ?>
		<? if ($sabnzbd_cfg['INSTALLBETA'] == yes && $sabnzbd_betaversion != ""): ?>
			<? if ($sabnzbd_betaversion != $sabnzbd_curversion): ?>
		<form name="sabnzbd_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd update">
				<p style="font-size:14px;color:blue;margin-left:10px;">Update available to version: <b><?=$sabnzbd_betaversion?></b></p>
			<table style="align:center;">
				<tr>
					<td><input type="submit" name="runCmd" value="Update"><button type="button" onClick="done();">Done</button></td>
				</tr>
			</table>
		</form>
			<? endif; ?>
		<? else: ?>
		<form name="sabnzbd_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.sabnzbd update">
				<p style="font-size:14px;color:blue;margin-left:10px;">Update available to version: <b><?=$sabnzbd_stableversion?></b></p>
			<table style="align:center;">
				<tr>
					<td><input type="submit" name="runCmd" value="Update"><button type="button" onClick="done();">Done</button></td>
				</tr>
			</table>
		</form>
		<? endif; ?>
	<? endif; ?>
<? else: ?>
	<p style="margin-left:10px;"><b>SABnzbd is not installed</b></p>
<? endif; ?>	
<hr>

<script type="text/javascript">
function checkINSTALLDIR(form)
{
	if ("<?=$sabnzbd_running;?>" == "yes")
	{
		form.arg2.readOnly = true;
		form.arg3.readOnly = true;
		form.arg4.readOnly = true;
		form.arg5.readOnly = true;
		form.arg6.readOnly = true;
		form.runas.disabled = true;
		form.use_data.disabled = true;
	}
   else
   {
		form.arg2.readOnly = (form.arg1.value == "enable");
		form.arg3.readOnly = (form.arg1.value == "enable");
		form.arg4.readOnly = (form.arg1.value == "enable");
		form.arg5.readOnly = (form.arg1.value == "enable");
		form.arg6.readOnly = (form.arg1.value == "enable");
		form.runas.disabled = (form.arg1.value == "enable");
		form.use_data.disabled = (form.arg1.value == "enable");
   }
}

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 )
	{
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	}
	else
	{
		form.arg2.value = "<?=$sabnzbd_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

function checkDATADIR(form)
{
	if (form.use_data.checked == false )
	{
		form.arg5.value = form.arg4.value;
		form.arg5.type = "hidden";
	}
	else
	{
		form.arg5.value = "<?=$sabnzbd_cfg['DATADIR'];?>";
		form.arg5.type = "text";
	}
}

checkINSTALLDIR(document.sabnzbd_settings);
checkUSER(document.sabnzbd_settings);
checkDATADIR(document.sabnzbd_settings);
</script>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/sabnzbd/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.sabnzbd start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/sabnzbd/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.sabnzbd stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/sabnzbd-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/sabnzbd/sabnzbd.cfg

# create sabnzbd-writable directory for pid file
if [ ! -e /var/run/sabnzbd ]; then
	mkdir /var/run/sabnzbd
	chown $RUNAS:users /var/run/sabnzbd
	chmod 0777 /var/run/sabnzbd
fi
rm /tmp/sabnzbd-install
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/sabnzbd">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

</PLUGIN>